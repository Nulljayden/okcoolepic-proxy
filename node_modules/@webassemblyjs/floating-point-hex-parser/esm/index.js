export default function parse(input) {
  // Check if input is a string
  if (typeof input !== 'string') {
    throw new Error('Input must be a string');
  }

  input = input.toUpperCase();
  let splitIndex = input.indexOf("P");
  let mantissa, exponent;

  if (splitIndex !== -1) {
    mantissa = input.substring(0, splitIndex);
    exponent = parseInt(input.substring(splitIndex + 1));
  } else {
    mantissa = input;
    exponent = 0;
  }

  let dotIndex = mantissa.indexOf(".");
  if (dotIndex !== -1) {
    let integerPart = parseInt(mantissa.substring(0, dotIndex), 16);
    let sign = Math.sign(integerPart);
    integerPart = Math.abs(integerPart);
    let fractionLength = mantissa.length - dotIndex - 1;
    let fractionalPart = parseInt(mantissa.substring(dotIndex + 1), 16);
    let fraction = fractionLength > 0 ? fractionalPart / Math.pow(16, fractionLength) : 0;

    mantissa = sign * (integerPart + fraction);
  } else {
    mantissa = parseInt(mantissa, 16);
  }

  // Check if exponent is an integer
  if (exponent !== undefined && !Number.isInteger(exponent)) {
    throw new Error('Exponent must be an integer');
  }

  return mantissa * (splitIndex !== -1 ? Math.pow(2, exponent) : 1);
}
