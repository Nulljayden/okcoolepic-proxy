import type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';
import type { MemoState } from './binary-search';

export type Source = {
  [line: number]: (Exclude<ReverseSegment, [number]>)[];
};

export default function buildBySources(
  decoded: readonly SourceMapSegment[][],
  memos: MemoState[]
): Source[] {
  return decoded.map((sourceMapSegments) => {
    const sourceLines: Source[number] = {};

    sourceMapSegments.forEach((segment) => {
      const lineNumber = segment[0];
      if (!sourceLines[lineNumber]) {
        sourceLines[lineNumber] = [];
      }
      sourceLines[lineNumber].push(...segment.slice(1));
    });

    return sourceLines;
  });
}
