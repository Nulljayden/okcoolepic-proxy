"use strict";

const { Parser, version } = require("./state.js");
require("./parseutil.js");
require("./statement.js");
require("./lval.js");
require("./expression.js");
require("./location.js");
require("./scope.js");
const { defaultOptions } = require("./options.js");
const { Position, SourceLocation, getLineInfo } = require("./locutil.js");
const { Node, TokenType } = require("./node.js");
const { types: tokTypes, keywords: keywordTypes } = require("./tokentype.js");
const { types: tokContexts, TokContext } = require("./tokencontext.js");
const { isIdentifierChar, isIdentifierStart } = require("./identifier.js");
const { Token } = require("./tokenize.js");
const { isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace } = require("./whitespace.js");
const { wordsRegexp, util: _util } = require("./util");

const utils = _util;

// Acorn is a tiny, fast JavaScript parser written in JavaScript.
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
// various contributors and released under an MIT license.
//
// Git repositories for Acorn are available at
//
//     http://marijnhaverbeke.nl/git/acorn
//     https://github.com/acornjs/acorn.git
//
// Please use the [github bug tracker][ghbt] to report issues.
//
// [ghbt]: https://github.com/acornjs/acorn/issues
//
// [walk]: util/walk.js

module.exports = {
  Parser,
  version,
  defaultOptions,
  Position,
  SourceLocation,
  getLineInfo,
  Node,
  TokenType,
  tokTypes,
  keywordTypes,
  TokContext,
  tokContexts,
  isIdentifierChar,
  isIdentifierStart,
  Token,
  isNewLine,
  lineBreak,
  lineBreakG,
  nonASCIIwhitespace,
  parse,
  parseExpressionAt,
  tokenizer,
  readme:
    "Acorn is a tiny, fast JavaScript parser written in JavaScript.\n" +
    "Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n" +
    "various contributors and released under an MIT license.\n" +
    "\n" +
    "Git repositories for Acorn are available at\n" +
    "\n" +
    "    http://marijnhaverbeke.nl/git/acorn\n" +
    "    https://github.com/acornjs/acorn.git\n" +
    "\n" +
    "Please use the [github bug tracker][ghbt] to report issues.\n" +
    "\n" +
    "  [ghbt]: https://github.com/acornjs/acorn/issues\n" +
    "\n" +
    "  [walk]: util/walk.js",
};

function parse(input, options) {
  return Parser.parse(input, options);
}

function parseExpressionAt(input, pos, options) {
  return Parser.parseExpressionAt(input, pos, options);
}

function tokenizer(input, options) {
  return Parser.tokenizer(input, options);
}

// =============================================================================
// =============================================================================
// ===================== TestCafe performance patch ============================
// =====================||||||||||||||||||||||||||||============================
// =====================vvvvvvvvvvvvvvvvvvvvvvvvvvvv============================

const storedWordsRegexp = utils.wordsRegexp;
const wordsRegexpCache = {};

utils.wordsRegexp = function (words) {
  if (!wordsRegexpCache[words]) wordsRegexpCache[words] = storedWordsRegexp(words);

  return wordsRegexpCache[words];
};

// =====================^^^^^^^^^^^^^^^^^^^^^^^^^^^^============================
// =====================||||||||||||||||||||||||||||============================
// ===================== TestCafe performance patch ============================
// =============================================================================
// =============================================================================
