"use strict";

exports.__esModule = true;
exports.SourceLocation = exports.Position = undefined;
exports.getLineInfo = getLineInfo;

const whitespace = require("./whitespace.js");

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

class Position {
  constructor(line, col) {
    this.line = line;
    this.column = col;
  }

  offset(n) {
    return new Position(this.line, this.column + n);
  }
}

exports.Position = Position;
class SourceLocation {
  constructor(p, start, end) {
    this.start = start;
    this.end = end;
    if (p.sourceFile !== null) this.source = p.sourceFile;
  }
}

exports.SourceLocation = SourceLocation;

/**
 * The `getLineInfo` function is mostly useful when the
 * `locations` option is off (for performance reasons) and you
 * want to find the line/column position for a given character
 * offset. `input` should be the code string that the offset refers
 * into.
 * @param {string} input - The input code string
 * @param {number} offset - The character offset
 * @return {Position} The line and column position
 */
function getLineInfo(input, offset) {
  let line = 1;
  let cur = 0;

  while (true) {
    const match = whites
