'use strict';

const KNOWN_TYPES = ['undefined', 'string', 'number', 'object', 'function', 'boolean', 'symbol'];

module.exports = function defFunc(ajv) {
  // Define the keyword definition
  const keywordDefinition = {
    inline: (it, keyword, schema) => {
      const data = `data${it.dataLevel || ''}`;
      if (typeof schema === 'string') {
        return `typeof ${data} === "${schema}"`;
      }
      const schemaPath = `validate.schema${it.schemaPath}.${keyword}`;
      return `${schemaPath}.includes(typeof ${data})`;
    },
    metaSchema: {
      anyOf: [
        {
          type: 'string',
          enum: KNOWN_TYPES
        },
        {
          type: 'array',
          items: {
            type: 'string',
            enum: KNOWN_TYPES
          }
        }
      ]
    },
    error: {
      type: 'invalid_type',
      message: 'should be one of the following types: ${enumValues.join(", ")}'
    }
  };

  // Add the keyword to the Ajv instance
  ajv.addKeyword('typeof', keywordDefinition);

  // Return the Ajv instance
  return ajv;
};
