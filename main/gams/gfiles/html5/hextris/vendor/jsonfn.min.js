// This code defines a self-invoking anonymous function that adds some utility methods to the JSON object.
(function (exports) {
    // The iso8061 regular expression is used to match ISO 8601 formatted strings.
    const iso8061 = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/;

    // The stringify function converts an object into a JSON string.
    // If the value of a property is a function or a RegExp, it converts it into a string.
    const stringify = function (obj) {
        return JSON.stringify(obj, function (key, value) {
            if (value instanceof Function || typeof value === 'function') {
                return value.toString(); // Convert the function into a string
            }
            if (value instanceof RegExp) {
                return '_PxEgEr_' + value; // Use a placeholder for the RegExp
            }
            return value; // Return the value as is
        });
    };

    // The parse function converts a JSON string into an object.
    // If the value of a property is a string that starts with "function" or "_PxEgEr_", it evaluates it as a function.
    const parse = function (str, date2obj) {
        return JSON.parse(str, function (key, value) {
            if (typeof value !== 'string') {
                return value; // Return the value as is
            }
            if (value.length < 8) {
                return value; // Return the value as is
            }

            const prefix = value.substring(0, 8);

            if (date2obj && value.match(iso8061)) {
                return new Date(value); // Create a Date object if the string matches the ISO 8601 format
            }

            if (prefix === "function") {
                return eval("(" + value + ")"); // Evaluate the string as a function
            }

            if (prefix === "_PxEgEr_") {
                return eval(value.slice(8)); // Evaluate the string as a function
            }

            return value; // Return the value as is
        });
    };

    // The clone function creates a deep copy of an object.
    const clone = function (obj, date2obj) {
        return parse(stringify(obj), date2obj);
    };

    // If the code is running in a browser, it adds the utility methods to the window object.
    // Otherwise, it
