/*!
 * Phaser Input Extension - version 2.0.5
 * Adds input boxes to Phaser, compatible with Canvas, WebGL, and Mobile.
 *
 * OrangeGames
 * Built at 02-06-2017
 * Released under MIT License
 */

// Input Box Types
var InputType = {
  TEXT: 0,
  PASSWORD: 1,
  NUMBER: 2,
};

// Force Case Options
var ForceCase = {
  NONE: 0,
  LOWER: 1,
  UPPER: 2,
};

// Input Field Class
var InputField = (function (sprite) {
  function InputField(game, x, y, width, config) {
    sprite.call(this, game, x, y, 'inputField');

    this.config = config;
    this.inputEnabled = true;
    this.input.useHandCursor = true;

    this.createInputElement();
    this.createText();
    this.createPlaceholder();
    this.createCursor();
    this.createSelection();

    this.game.input.onDown.add(this.checkDown, this);

    this.focusOutOnEnter = true;
    this.focus = false;
    this.value = '';
    this.windowScale = 1;
    this.blockInput = true;

    this.initInput();
  }

  // ... rest of the InputField code ...

  return InputField;
})(Phaser.Sprite);

// Input Box Class
var InputBox = (function (graphics) {
  function InputBox(game, config) {
    graphics.call(this, game, config.padding, config.padding);

    this.config = config;

    this.bgColor = config.backgroundColor || 0x000000;
    this.borderRadius = config.borderRadius || 0;
    this.borderWidth = config.borderWidth || 1;
    this.borderColor = config.borderColor || 0x000000;
    this.boxAlpha = config.fillAlpha || 1;
    this.padding = config.padding;

    this.drawBox();
  }

  // ... rest of the InputBox code ...

  return InputBox;
})(Phaser.Graphics);

// Selection Highlight Class
var SelectionHighlight = (function (graphics) {
  function SelectionHighlight(game, config) {
    graphics.call(this, game, config.padding, config.padding);

    this.config = config;
  }

  // ... rest of the SelectionHighlight code ...

  return SelectionHighlight;
})(Phaser.Graphics);

// Text Mask Class
var TextMask = (function (graphics) {
  function TextMask(game, config) {
    graphics.call(this, game, config.padding, config.padding);

    this.config = config;
  }

  // ... rest of the TextMask code ...

  return TextMask;
})(Phaser.Graphics);

// Phaser Input Plugin
var PhaserInputPlugin = (function (Plugin) {
  function PhaserInputPlugin(game) {
    Plugin.call(this, game);

    this.addInputFieldFactory();
  }

  // ... rest of the PhaserInputPlugin code ...

  return PhaserInputPlugin;
})(Phaser.Plugin);
